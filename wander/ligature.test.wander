Assert.equal "Start with no datasets" (Ligature.datasets ()) [],

Assert.equal "Add dataset" (
    Ligature.createDataset "hello",
    Ligature.datasets (),    
    )
    ["hello"],

Assert.equal "Start with no Statements" (Ligature.allStatements "hello") [],

-- Assert.equal "Add Statements" (
--     Ligature.addStatements "hello" [`a` `b` `c`, `d` `e` 234, `f` `g` "h", `q` `u` 0xDEADCAFE],
--     Ligature.allStatements "hello")
--     [`a` `b` `c`, `d` `e` 234, `f` `g` "h", `q` `u` 0xDEADCAFE],

-- Assert.equal "Basic match" (Ligature.match "hello" ? ? ?)
--     (Dataset.ofArray [`a` `b` `c`, `d` `e` 234, `f` `g` "h", `q` `u` 0xDEADCAFE]),

-- Assert.equal "Basic match with Entity" (Ligature.match "hello" `a` ? ?)
--     [`a` `b` `c`],

-- Assert.equal "Basic match with Attribute" (Ligature.match "hello" ? `g` ?)
--     [`f` `g` "h"],

-- Assert.equal "Basic match with Int Value" (Ligature.match "hello" ? ? 234)
--     [`d` `e` 234],

-- Assert.equal "Basic match with String Value" (Ligature.match "hello" ? ? "h")
--     [`f` `g` "h"],

--Assert.equal "Basic match with Bytes Value" (Ligature.match "hello" ? ? 0xDEADCAFE)
--    [`q` `u` 0xDEADCAFE],

--Assert.equal "Test match that should have no results" (Ligature.match "hello" `x` ? ?) [],
