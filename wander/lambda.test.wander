id = \i -> i,
Assert.equal "Test basic definition." (id "hello") "hello",
Assert.equal "Define simple lambda and call it" (id = \x -> x, id "hello") "hello",
id i = i,
Assert.equal "Test short definition." (id "hello") "hello",
pair x y = [x, y],
Assert.equal "Test short definition with two params." (pair "hello" "world") ["hello", "world"],
ns = { pair x y = [x, y], id = \i -> i },
Assert.equal "Test calling Namespace function def." (ns.pair "hello" "world" | ns.id) ["hello", "world"],

    -- {
    --     name = "Partial application of Host Function",
    --     test = (inc = Int.add 1, inc 4),
    --     expect = 5
    -- },
    -- {
    --     name = "Partial application of lambda",
    --     test = (middle = \a b c -> b, first = middle {}, first "hello" "world"),
    --     expect = "hello"
    -- },
    -- {
    --     name = "Multiple partial applications",
    --     test = (multiple = \a b c d -> 5,
    --         multipleA = multiple 1,
    --         multipleB = multipleA 2, 
    --         multipleC = multipleB 3, 
    --         multipleC {}),
    --     expect = 5
    -- },
