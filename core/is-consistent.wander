test-group(
    "is-consistent tests"
    expect-equal(
        "single instance"
        true 
        is-consistent( 
            definitions()
            assertions (instance(betty Cat))))

    expect-equal(
        "simple direct clash"
        false
        is-consistent( 
            definitions()
            assertions(instance(betty Cat) instance(betty not(Cat)))))
    expect-equal(
        "clash with conjunction"
        false
        is-consistent(
            definitions()
            assertions (instance (a and (A not (A))))))

    expect-equal(
        "clash with conjunction and definitions"
        false
        is-consistent(
            definitions (equivalent (A B))
            assertions (instance (a and (A not (B))))))

    expect-equal(
        "conjunction and negation"
        is-consistent(
            definitions()
            assertions (instance (a and (A B)) instance (a not (B))))
        false)

    expect-equal(
        "disjunction and negation"
        is-consistent( 
            definitions()
            assertions (instance (a or (A B)) instance (a not (A))))
        true)

    expect-equal(
        "double negation"
        is-consistent(
            definitions()
            assertions (instance (a not (not (A))) instance (a not (A))))
        false)

    expect-equal(
        "disjunction with two negations"
        is-consistent(
            definitions()
            assertions (instance (a or (A B)) instance (a not (A)) instance (a not (B))))
        false)

    expect-equal(
        "combining disjunction and conjunction"
        is-consistent(
            definitions()
            assertions (instance (a or (A B)) instance (a not (and (A B)))))
        true)

    expect-equal(
        "disjunction and negation"
        is-consistent(
            definitions()
            assertions (instance (a or (A B)) instance (a not (or (A B)))))
        false)

    expect-equal(
        "basic exists"
        is-consistent( 
            definitions()
            assertions (instance (a exists (b C))))
        true)

    expect-equal(
        "basic all"
        is-consistent( 
            definitions()
            assertions (instance (a all (b C))))
        true)

    expect-equal(
        "all with negation"
        is-consistent( 
            definitions()
            assertions (instance (a all (b C)) rel(a b c) instance(c not(C))))
        false)

    -- top
    -- bottom

    expect-equal(
        ""
        false
        is-consistent(
            definitions()
            assertions (instance(betty Cat) instance(betty not(Cat)))))

    expect-equal(
        false
        is-consistent(
            definitions (implies (Cat Animal))
            assertions (instance(betty Cat) instance(betty not(Animal)))))

    expect-equal(
        false
        is-consistent( 
            definitions (implies (A B) implies (B C))
            assertions (instance (a A) instance (a not (C)))))

    expect-equal(
        is-consistent( 
            definitions (implies (A and (B C)))
            assertions (instance (a A) instance (a not (C))))
        false)

    expect-equal(
        true
        is-consistent (definitions() assertions (instance (a or (B A)) instance(a not(A)))))

    expect-equal(
        is-consistent(
            definitions()
            assertions (
                instance(betty and(Plant Carnivore))
                instance (betty or (not (Plant) not (Carnivore)))))
        false)

    expect-equal(
        false
        is-consistent(
            definitions()
            assertions( 
                instance(betty and(Plant Carnivore))
                instance (betty not (and (Plant Carnivore))))))

    expect-equal(
        false
        is-consistent(
            definitions (equivalent (Dog Doggo))
            assertions(
                instance (megan Dog)
                instance (megan not (Doggo)))))

    expect-equal(
        false
        is-consistent(
            definitions( 
                equivalent(
                    CarnivorousPlant
                    and( Plant Carnivore)))
            assertions( 
                instance(betty and(Plant Carnivore))
                instance(betty not(CarnivorousPlant)))))

    expect-equal(
        true
        is-consistent(
            definitions( 
                equivalent(
                    A
                    and( not( B) C)))
            assertions( 
                instance (betty and(B C not(A))))))

    expect-equal(
        true
        is-consistent(
            definitions( 
                equivalent(
                    A
                    or( not( B) C)))
            assertions( 
                instance(betty not(B))
                instance(betty and(A C)))))

    expect-equal(
        true
        is-consistent(
            definitions( 
                equivalent(
                    A
                    or( not( B) C)))
            assertions( 
                instance(betty B)
                instance(betty C)
                instance(betty A))))

    expect-equal(
        false
        is-consistent(
            definitions (
                equivalent(
                    A
                    and (not (B) exists (c D))))
            assertions( 
                instance (betty and(A B))))))
