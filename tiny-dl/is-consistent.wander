(expect-equal
    true 
    (is-consistent 
        (definitions)
        (assertions [betty : Cat])))

(expect-equal
    false
    (is-consistent 
        (definitions)
        (assertions [betty : Cat] [betty ~ Cat])))

(expect-equal
    (is-consistent
        (definitions)
        (assertions (instance a (and A B)) (instance a (not B))))
    false)

(expect-equal
    (is-consistent 
        (definitions)
        (assertions (instance a (or A B)) (instance a (not A))))
    true)

(expect-equal
    (is-consistent
        (definitions)
        (assertions (instance a (not (not A))) (instance a (not A))))
    false)

(expect-equal
    (is-consistent
        (definitions)
        (assertions (instance a (or A B)) (instance a (not A)) (instance a (not B))))
    false)

(expect-equal
    (is-consistent
        (definitions)
        (assertions (instance a (or A B)) (instance a (not (and A B)))))
    true)

(expect-equal
    (is-consistent
        (definitions)
        (assertions (instance a (or A B)) (instance a (not (or A B)))))
    false)

-- (expect-equal
--     (is-consistent 
--         (definitions)
--         (assertions (instance a (exists b C))))
--     true)

-- (expect-equal
--     (is-consistent 
--         (definitions)
--         (assertions (instance a (all b C))))
--     true)

-- all
-- exists
-- top
-- bottom


-- (expect-equal
--     false
--     (is-consistent
--         (definitions (implies Cat Animal))
--         (assertions [betty : Cat] [betty ~ Animal])))

-- (expect-equal
--     false
--     (is-consistent 
--         (definitions (implies A B) (implies B C))
--         (assertions (instance a A) (instance a (not C)))))

-- (expect-equal
--     (interpret 
--         (definitions (define-concept A (and B C)))
--         (assertions (instance a A)))
--     (set [ { 
--         individuals { a { instance (set [A B C]) is-not (set []) } }
--         roles {}
--         attributes {}}]))
